name: Upstream Sync

permissions:
  contents: write

on:
  schedule:
    - cron: "0 * * * *" # every day
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build even if no upstream changes'
        type: boolean
        default: false
      sync_test_mode: # Adds a boolean option that appears during manual workflow run for easy test mode config
        description: 'Fork Sync Test Mode'
        type: boolean
        default: false

jobs:
  sync_latest_from_upstream:
    name: Sync latest commits from upstream repo
    runs-on: ubuntu-latest

    steps:
      # Step 1: run a standard checkout action
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-tags: 'true'

      # Step 2: run the sync action
      - name: Sync upstream changes
        id: sync
        uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
        with:
          upstream_sync_repo: zereight/gitlab-mcp
          upstream_sync_branch: main
          target_sync_branch: main
          target_repo_token: ${{ secrets.GITHUB_TOKEN }} # automatically generated, no need to set

          test_mode: ${{ inputs.sync_test_mode }}

      - name: Login to Docker Hub
        if: steps.sync.outputs.has_new_commits == 'true' or ${{ inputs.force_build == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        if: steps.sync.outputs.has_new_commits == 'true' or ${{ inputs.force_build == 'true' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.sync.outputs.has_new_commits == 'true' or ${{ inputs.force_build == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: Get latest tag
        if: steps.sync.outputs.has_new_commits == 'true' or ${{ inputs.force_build == 'true' }}
        shell: bash
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "TAG=${TAG:1}" >> $GITHUB_ENV

      - name: Build and push
        if: steps.sync.outputs.has_new_commits == 'true' or ${{ inputs.force_build == 'true' }}
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: nkwd/gitlab-mcp:latest,nkwd/gitlab-mcp:${{ github.sha }},
                nkwd/gitlab-mcp:${{ env.TAG }}
